# set carrier input shares equal to energy coming into the node as specified by the user
# if demand is 0, set carrier input shares equal to dummy numbers

- query =
    steel_blastfurnace_burner_coal_gas_coal = DATASET_INPUT(input_industry_metal_steel_scaling_factor) * PARENT_VALUE(industry_steel_blastfurnace_burner_coal_gas, input_of_coal) / 1_000_000;
    steel_blastfurnace_burner_coal_gas_coal_gas = DATASET_INPUT(input_industry_metal_steel_scaling_factor) * PARENT_VALUE(industry_steel_blastfurnace_burner_coal_gas, input_of_coal_gas) / 1_000_000;
    steel_blastfurnace_burner_coal_gas_network_gas = DATASET_INPUT(input_industry_metal_steel_scaling_factor) * PARENT_VALUE(industry_steel_blastfurnace_burner_coal_gas, input_of_network_gas) / 1_000_000;
    steel_blastfurnace_burner_coal_gas_total = steel_blastfurnace_burner_coal_gas_coal + steel_blastfurnace_burner_coal_gas_coal_gas + steel_blastfurnace_burner_coal_gas_network_gas;

    IF(steel_blastfurnace_burner_coal_gas_total > 0.0, {
        coal: steel_blastfurnace_burner_coal_gas_coal / steel_blastfurnace_burner_coal_gas_total,
        coal_gas: steel_blastfurnace_burner_coal_gas_coal_gas / steel_blastfurnace_burner_coal_gas_total,
        network_gas: steel_blastfurnace_burner_coal_gas_network_gas / steel_blastfurnace_burner_coal_gas_total }, {
        coal: 1.0,
        coal_gas: 0.0,
        network_gas: 0.0}
        )
