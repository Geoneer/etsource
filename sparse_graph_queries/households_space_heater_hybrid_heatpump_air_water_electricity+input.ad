# node demand equals % of total delivered heat (user input) divided by heat efficiency

- query =
    elec_tj = SPARSE_GRAPH_QUERY(households_final_demand_electricity, demand) * SPARSE_GRAPH_QUERY(households_final_demand_electricity-households_final_demand_for_space_heating_electricity, parent_share) * SPARSE_GRAPH_QUERY(households_final_demand_for_space_heating_electricity-households_space_heater_hybrid_heatpump_air_water_electricity, parent_share);
    ambient_relative_to_elec = NODE_EFFICIENCY(households_space_heater_hybrid_heatpump_air_water_electricity, input, electricity) / (NODE_EFFICIENCY(households_space_heater_hybrid_heatpump_air_water_electricity, input, electricity) + NODE_EFFICIENCY(households_space_heater_hybrid_heatpump_air_water_electricity, input, ambient_heat));
    ambient_tj = elec_tj / ambient_relative_to_elec;
    gas_tj = SPARSE_GRAPH_QUERY(households_final_demand_network_gas, demand) * SPARSE_GRAPH_QUERY(households_final_demand_network_gas-households_final_demand_for_space_heating_network_gas, parent_share) * SPARSE_GRAPH_QUERY(households_final_demand_for_space_heating_network_gas-households_space_heater_hybrid_heatpump_air_water_electricity, parent_share);
    total_heat = elec_tj + ambient_tj + gas_tj;

      { electricity: elec_tj / total_heat,
        network_gas: gas_tj / total_heat,
        ambient_heat: ambient_tj / total_heat}
