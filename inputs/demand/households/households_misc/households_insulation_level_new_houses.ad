- priority = 0
- step_value = 0.1
- max_value_gql = present:AREA(insulation_level_new_houses_max)
- min_value_gql = present:AREA(insulation_level_new_houses_min)
- start_value_gql = present:AREA(insulation_level_new_houses_min)
- unit = m^2K/W
- update_period = future
- query =
    cost_per_new_house = AREA(new_houses_insulation_cost_constant) * (USER_INPUT() - AREA(insulation_level_new_houses_min));
    total_cost = cost_per_new_house * QUERY_FUTURE(-> { AREA(number_of_new_residences) });
    saving_fraction = 1.0 - AREA(new_houses_insulation_constant_1) / (USER_INPUT() + AREA(new_houses_insulation_constant_2));

    fraction = (USER_INPUT() - AREA(insulation_level_new_houses_min)) / (AREA(insulation_level_new_houses_max) - AREA(insulation_level_new_houses_min));
    input_conversion_electricity = fraction * 0.222222222222222;
    input_conversion_gas = (1.0 - fraction) * 0.222222222222222;

    EACH(
      UPDATE(V(households_new_houses_heating_savings_from_insulation), initial_investment, total_cost),
      UPDATE(LINK(households_new_houses_useful_demand_for_heating,households_new_houses_heating_savings_from_insulation), share, saving_fraction),
      UPDATE(LINK(households_new_houses_useful_demand_for_cooling,households_new_houses_cooling_savings_from_insulation), share, saving_fraction),
      UPDATE(INPUT_SLOTS(V(households_space_heater_hybrid_heatpump_collector_useable_heat), electricity), conversion, input_conversion_electricity),
      UPDATE(INPUT_SLOTS(V(households_space_heater_hybrid_heatpump_collector_useable_heat), network_gas), conversion, input_conversion_gas)
    )

