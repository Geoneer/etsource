- priority = 0
- step_value = 0.1
- max_value_gql = present:AREA(insulation_level_new_houses_max)
- min_value_gql = present:AREA(insulation_level_new_houses_min)
- start_value_gql = present:AREA(insulation_level_new_houses_min)
- unit = m^2K/W
- update_period = future
- query =
    cost_per_new_house = AREA(new_houses_insulation_cost_constant) * (USER_INPUT() - AREA(insulation_level_new_houses_min));
    total_cost = cost_per_new_house * QUERY_FUTURE(-> { AREA(number_of_new_residences) });
    saving_fraction = 1.0 - AREA(new_houses_insulation_constant_1) / (USER_INPUT() + AREA(new_houses_insulation_constant_2));


    COP = 4.5;
    
    #will be exported from ETDataset later
    
    gas_efficiency = 1.07

    #will be exported from ETDataset later
    
    initial_fraction_gas_to_heatpump = 0.3;

    #will be exported from ETDataset as well

    insulation_fraction = (USER_INPUT() - QUERY_PRESENT(-> {AREA(insulation_level_new_houses_min) })) / (QUERY_PRESENT(-> {AREA(insulation_level_new_houses_max) }) - QUERY_PRESENT(-> {AREA(insulation_level_new_houses_min) }));

    fraction_gas_to_heatpump = (initial_fraction_gas_to_heatpump - 0.1 * insulation_fraction)/gas_efficiency;

    input_conversion_network_gas = fraction_gas_to_heatpump;
    input_conversion_electricity = (1.0 - fraction_gas_to_heatpump) * 1.0 / COP;
    input_conversion_ambient_heat = (1.0 - fraction_gas_to_heatpump) * (1.0 - 1.0 / COP);

    EACH(
      UPDATE(V(households_new_houses_heating_savings_from_insulation), initial_investment, total_cost),
      UPDATE(LINK(households_new_houses_useful_demand_for_heating,households_new_houses_heating_savings_from_insulation), share, saving_fraction),
      UPDATE(LINK(households_new_houses_useful_demand_for_cooling,households_new_houses_cooling_savings_from_insulation), share, saving_fraction),
      UPDATE(INPUT_SLOTS(V(households_space_heater_hybrid_heatpump_air_water_electrcity), electricity), conversion, input_conversion_electricity),
      UPDATE(INPUT_SLOTS(V(households_space_heater_hybrid_heatpump_air_water_electrcity), network_gas), conversion, input_conversion_network_gas),
      UPDATE(INPUT_SLOTS(V(households_space_heater_hybrid_heatpump_air_water_electrcity), ambient_heat), conversion, input_conversion_ambient_heat)

    )